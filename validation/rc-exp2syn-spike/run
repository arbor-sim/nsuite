#!/usr/bin/env bash

# Change to script directory and attempt to find nsuite base directory.
unset CDPATH
cd "${BASH_SOURCE[0]%/*}"
[ -n "$ns_base_path" ] || ns_base_path="$(cd ../..; pwd)"

# Set up model paths and model_XXX variables.
source "$ns_base_path/scripts/model_common.sh"
model_setup rc-exp2syn-spike "$@"

# Run sim-specific model with parameter data.
#
# Expected output variables:
#     v0      voltage trace of cell 0 soma (dimension 'time')
#     spike   time to first spike on cell (dimension 'gid')
#
# For CoreNEURON, voltage traces will be omitted; the pass/fail
# test only looks at spike time differences.

# Run sim-specific implementation with parameter data.
outfile="$model_output_dir/run.nc"
model_try_run "run-$model_sim" "$outfile" $model_param_data

# Generate reference data if required.
reffile=$(model_find_cacheable "ref-${model_name}-${model_param}.nc")
if [ $? -ne 0 -o -n "$model_refresh" ]; then 
    ./generate-rc-exp2syn-spike "$reffile" $model_param_data
fi

# Run comparison.
deltafile="$model_output_dir/delta.nc"
comparex "$outfile" --warn --ref "$reffile" --var spike -o "$deltafile"

# Get threshold from parameter data 'max_error'
max_error=
for param in $model_param_data; do
    if [[ "$param" =~ ^'max_error='(.*) ]]; then
        max_error=${BASH_REMATCH[1]}
    fi
done
if [ -z "$max_error" ]; then
    echo 'Missing max_error in parameter set' >&2
    exit 1
fi

thresholdx "$deltafile" -e "spike.abserr<$max_error" > "$model_status_path"
model_notify_pass_fail $?
