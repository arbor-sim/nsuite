#!/usr/bin/env bash

function usage {
    cat <<'_end_'
Usage: pathsub [--help|-h] [--base=PATH] [key=value ...] [--] [FORMAT ...]

Substitute "%key" with "value" in each string FORMAT. If --base=PATH
is supplied, prepend PATH if resulting string is not an absolute path.

Each substituted string is printed to stdout, terminated by a newline.
_end_
}

unset basedir
unset assignments
unset strings

declare -a assignments
declare -a strings

unset eoo
while [ $# -gt 0 -a -z "$eoo" ]; do
    case $1 in
    --)
        eoo=1
        ;;
    --help | -h )
        usage
        exit 0
        ;;
    --base=* )
        basedir=${1#--base=}
        ;;
    --base )
        shift
        basedir="$1"
        ;;
    *=* )
        assignments+=("$1")
        ;;
    * )
        strings+=("$1")
        ;;
    esac
    shift
done

strings+=("${@}")

function subformat {
    awk \
       'BEGIN {
           lookup["%%"] = "%"
           maxkeylen = 2
        }
        run {
            out = ""
            while ($0 ~ /%/) {
                match($0, /[^%]*/);
                out = (out substr($0, 1, RLENGTH))
                key = "%"
                replace = "%"
                for (i = maxkeylen; i>1; --i) {
                    test = substr($0, RLENGTH+1, i)
                    if (test in lookup) {
                        key = test
                        replace = lookup[test]
                        break
                    }
                }
                out = (out replace)
                $0 = substr($0, RLENGTH+1+length(key))
            }
            print (out $0)
        }
        /.=/ && ! run {
            match($0, /=/)
            k = ("%" substr($0, 1, RSTART-1))
            v = substr($0, RSTART+1)
            lookup[k] = v
            if (RSTART>maxkeylen) maxkeylen = RSTART
        }
        /^--$/ && ! run {
            run = 1
        }' <(for a in "${@}"; do echo "$a"; done; echo --) -
}

function prepend_dir {
    if [[ -z $1 || $2 =~ ^/.* ]]; then
        echo "$2"
    else
        echo "${1%/}/$2"
    fi
}

for s in "${strings[@]}"; do
    echo "$(prepend_dir "$basedir" "$(subformat "${assignments[@]}" <<< "$s")")"
done
